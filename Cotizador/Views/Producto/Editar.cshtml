@{
    ViewBag.Title = "Crear/Modificar Producto";
    Model.Producto producto = ViewBag.producto;
    var disabledLabel = "disabled = ''";
}

<div class="page-header">
    <h3>@ViewBag.Title</h3>
</div>

<div class="container">
    <input type="hidden" id="pagina" value="@ViewBag.pagina" />
    <input type="hidden" value="@ViewBag.debug" />
    <form class="form-horizontal">

        <div class="row">
            <input type="hidden" id="idProducto" name="idProducto" value="@producto.idProducto" />

            <div class="col-sm-6 col-lg-4">
                <div class="row text-center">
                    <img id="verImagen"
                         style="height:150px;"
                         class="image-fluid"
                         accept="image/x-png,image/gif,image/jpeg"
                         src="data:image/png;base64,@Convert.ToBase64String(producto.image)">

                    <div class="row">
                        <div class="col-sm-12 col-lg-12">
                            <div class="form-group">

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col text-center align-self-center">
                            <label for="imgProductUpload" class="btn btn-primary btn-load-image">Cambiar Imagen</label>
                        </div>
                        <div>
                            <span style="margin-right: 20px; font-size:12px; color: darkred; font-weight: normal " class="has-error">
                                Solo puede subir imágenes de hasta 200KB de tamaño y con extensiones: .jpg, .png y .gif
                            </span>
                        </div>
                    </div>
                    <input type="file"
                           id="imgProductUpload"
                           style="display:none;"
                           accept="image/x-png,image/gif,image/jpeg"
                           class="hiddenfileinput"
                           data-max-size="204800"
                           data-max-size-text="200KB"
                           data-url-set-image="@Url.Action("ChangeImage", "Producto")">
                </div>
            </div>
            <div class="col-sm-6 col-lg-8">
                <div class="row">
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(c => producto.sku, htmlAttributes: new { @class = "control-label col-xs-4" })
                            <div class="col-xs-8">
                                @Html.TextBoxFor(c => producto.sku, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(c => producto.Estado, htmlAttributes: new { @class = "control-label col-xs-4" })
                            <div class="col-xs-8">
                                <div class="radio radio-inline">
                                    <label class="radio-label">
                                        @if (producto.Estado == 1)
                                        {
                                            <input class="radio-input" checked type="radio" name="producto_estado" id="producto_estado_si" value="1"><span>Activo</span>
                                        }
                                        else
                                        {
                                            <input class="radio-input" type="radio" name="producto_estado" id="producto_estado_si" value="1"><span>Activo</span>
                                        }
                                    </label>
                                </div>
                                <div class="radio radio-inline">
                                    <label class="radio-label">
                                        @if (producto.Estado == 0)
                                        {
                                            <input class="radio-input" checked type="radio" name="producto_estado" id="producto_estado_no" value="0"><span>Inactivo</span>
                                        }
                                        else
                                        {
                                            <input class="radio-input" type="radio" name="producto_estado" id="producto_estado_no" value="0"><span>Inactivo</span>
                                        }
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!--Descripcion-->
                    <div class="col-sm-12 col-lg-12">
                        <div class="form-group">
                            @Html.LabelFor(dv => producto.descripcion, htmlAttributes: new { @class = "control-label col-xs-2 col-lg-2" })
                            <div class="col-xs-10">
                                @Html.TextBoxFor(c => producto.descripcion, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!--Familia-->
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(c => producto.familia, htmlAttributes: new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.Action("list", "Familia")
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(c => producto.tipoProducto, htmlAttributes: new { @class = "control-label col-xs-4" })
                            <div class="col-xs-8">
                                @Html.DropDownList("tipoProducto",
                                        EnumHelper.GetSelectList(typeof(Model.Producto.TipoProducto), producto.tipoProducto),
                                        new { @class = "form-control" }
                                        )
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!--Proveedor-->
                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(c => producto.proveedor, htmlAttributes: new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.Action("list", "Proveedor")
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(c => producto.skuProveedor, htmlAttributes: new { @class = "control-label col-xs-4" })
                            <div class="col-xs-8">
                                @Html.TextBoxFor(c => producto.skuProveedor, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12 col-lg-12">
                <div class="form-group">

                </div>
            </div>
        </div>


        <div class="row">
            <div class="row">
                <!--Unidad-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">


                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6 col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(c => producto.unidadConteo, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                    <div class="col-xs-6 col-sm-6 col-lg-8">
                        @Html.TextBoxFor(c => producto.unidadConteo, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="col-sm-6 col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(c => producto.codigoSunat, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                    <div class="col-xs-6 col-sm-6 col-lg-8">
                        @Html.TextBoxFor(c => producto.codigoSunat, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="col-sm-6 col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(c => producto.tipoCambio, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                    <div class="col-xs-6 col-sm-6 col-lg-8">
                        @Html.TextBoxFor(c => producto.tipoCambio, htmlAttributes: new { @class = "form-control", @type = "number", @step = "0.01" })
                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <!--COSTO-->
            <div class="col-sm-6 col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(c => producto.monedaMP, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                    <div class="col-xs-6 col-sm-6 col-lg-8">
                        <select class="form-control" id="producto_monedaMP">
                            <option @(producto.monedaMP == "S" ? "selected" : "") value="S">Soles</option>
                            <option @(producto.monedaMP == "D" ? "selected" : "") value="D">Dólares</option>
                        </select>
                    </div>
                </div>
            </div>

            <!--Precio Lima-->
            <div class="col-sm-6 col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(c => producto.precioOriginal, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                    <div class="col-xs-6 col-sm-6 col-lg-8">
                        @Html.TextBoxFor(c => producto.precioOriginal, htmlAttributes: new { @class = "form-control", @type = "number", @step = "0.01" })
                    </div>
                </div>
            </div>

            <!--Precio Provincias-->
            <div class="col-sm-6 col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(c => producto.precioProvinciasOriginal, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                    <div class="col-xs-6 col-sm-6 col-lg-8">
                        @Html.TextBoxFor(c => producto.precioProvinciasOriginal, htmlAttributes: new { @class = "form-control", @type = "number", @step = "0.01" })
                    </div>
                </div>
            </div>
        </div>

        @if (producto.usuario.visualizaCostos)
        {
            <div class="row">
                <!--COSTO-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.monedaProveedor, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            <select class="form-control" id="producto_monedaProveedor">
                                <option @(producto.monedaProveedor == "S" ? "selected" : "") value="S">Soles</option>
                                <option @(producto.monedaProveedor == "D" ? "selected" : "") value="D">Dólares</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.costoOriginal, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.costoOriginal, htmlAttributes: new { @class = "form-control", @type = "number", @step = "0.01" })
                        </div>
                    </div>
                </div>
            </div>
        }
        <br />
        <fieldset id="fieldSetUnidadMP">
            <legend>UNIDAD MP:</legend>
            <div class="row">
                <!--Unidad-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.unidad, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.unidad, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <!--Unidad Estandar internacional-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.unidadEstandarInternacional, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.unidadEstandarInternacional, htmlAttributes: new { @class = "form-control", @maxlength = "3" })
                        </div>
                    </div>
                </div>

                <!--Equivalencia Unidad Conteo-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.equivalenciaUnidadEstandarUnidadConteo, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.equivalenciaUnidadEstandarUnidadConteo, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>

        <fieldset id="fieldSetUnidadAlternativa">
            <legend>UNIDAD ALTERNATIVA:</legend>
            <div class="row">
                <!--Unidad Alternativa-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.unidad_alternativa, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.unidad_alternativa, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <!-- Unidad Sunat -->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.unidadAlternativaInternacional, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.unidadAlternativaInternacional, htmlAttributes: new { @class = "form-control", @maxlength = "3" })
                        </div>
                    </div>
                </div>

                <!--Equivalencia Unidad Conteo-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.equivalenciaUnidadAlternativaUnidadConteo, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.equivalenciaUnidadAlternativaUnidadConteo, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <!--Equivalencia-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.equivalenciaAlternativa, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.equivalenciaAlternativa, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>

        <fieldset id="fieldSetUnidadProveedor">
            <legend>UNIDAD PROVEEDOR:</legend>
            <div class="row">
                <!--Unidad Alternativa-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.unidadProveedor, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.unidadProveedor, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <!-- Unidad Sunat -->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.unidadProveedorInternacional, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.unidadProveedorInternacional, htmlAttributes: new { @class = "form-control", @maxlength = "3" })
                        </div>
                    </div>
                </div>

                <!--Equivalencia Unidad Conteo-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.equivalenciaUnidadProveedorUnidadConteo, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.equivalenciaUnidadProveedorUnidadConteo, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <!--Equivalencia-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.equivalenciaProveedor, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.equivalenciaProveedor, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <!-- Unidad Pedido Proveedor -->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.unidadPedidoProveedor, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.unidadPedidoProveedor, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <!--Equivalencia Unidad Pedido Proveedor-->
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.equivalenciaUnidadPedidoProveedor, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.equivalenciaUnidadPedidoProveedor, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
        <br />
        <fieldset id="fieldSetConfiguraciones">
            <legend>CONFIGURACION:</legend>
            <div class="row">
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.topeDescuento, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.topeDescuento, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-6 col-lg-4">
                    <div class="row">
                        <div class="col-sm-1 col-lg-2">
                        </div>
                        <div class="col-sm-11 col-lg-10">
                            <div class="form-group">
                                <div class="onoffswitch">
                                    <input type="checkbox" name="onoffswitch" @(producto.exoneradoIgv ? "checked" : "") class="onoffswitch-checkbox" id="producto_exoneradoIgv">
                                    <label class="onoffswitch-label" for="producto_exoneradoIgv"></label>
                                </div>
                                <h5 id="producto_exoneradoIgvLabel" style="width: 90%; font-size: 16px; margin-left: 45px; margin-top: -24px; font-weight:bold; cursor:pointer;">Exonerado IGV</h5>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-sm-6 col-lg-4">
                    <div class="row">
                        <div class="col-sm-1 col-lg-2">
                        </div>
                        <div class="col-sm-11 col-lg-10">
                            <div class="form-group">
                                <div class="onoffswitch">
                                    <input type="checkbox" name="onoffswitch" @(producto.inafecto ? "checked" : "") class="onoffswitch-checkbox" id="producto_inafecto">
                                    <label class="onoffswitch-label" for="producto_inafecto"></label>
                                </div>
                                <h5 id="producto_inafectoIgvLabel" style="width: 90%; font-size: 16px; margin-left: 45px; margin-top: -24px; font-weight:bold; cursor:pointer;">Inafecto</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-lg-8">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.descripcionLarga, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-2" })
                        <div class="col-xs-6 col-sm-6 col-lg-10">
                            @Html.TextAreaFor(c => producto.descripcionLarga, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        <div class="onoffswitch">
                            <input type="checkbox" name="onoffswitch" @(producto.agregarDescripcionCotizacion == 1 ? "checked" : "") class="onoffswitch-checkbox" id="chkAgregarDescripcionCotizacion">
                            <label class="onoffswitch-label" for="chkAgregarDescripcionCotizacion"></label>
                        </div>
                        <h5 id="lblChkAgregarDescripcionCotizacionLabel" style="width: 90%; font-size: 16px; margin-left: 45px; margin-top: -24px; font-weight:bold; cursor:pointer;">Agregar descripción larga a cotización</h5>
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.ventaRestringida, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.DropDownList(
                                "ventaRestringida",
                                EnumHelper.GetSelectList(typeof(Model.Producto.TipoVentaRestringida), producto.ventaRestringida),
                                new { @class = "form-control" }
                            )
                            @if (producto.descontinuado == 1)
                            {
                                <textarea id="motivoRestriccion" placeholder="Motivo de restricción" style="width: 100%; padding: 0px 3px; margin-top: 5px;">@producto.motivoRestriccion</textarea>
                            }
                            else
                            {
                                <textarea id="motivoRestriccion" placeholder="Motivo de restricción" style="width: 100%; padding: 0px 3px; margin-top: 5px; display: none;">@producto.motivoRestriccion</textarea>
                            }
                        </div>
                    </div>
                </div>

                <div class="col-sm-6 col-lg-4">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.cantidadMaximaPedidoRestringido, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-6 col-lg-4" })
                        <div class="col-xs-6 col-sm-6 col-lg-8">
                            @Html.TextBoxFor(c => producto.cantidadMaximaPedidoRestringido, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-sm-6 col-lg-6">
                    <div class="form-group">
                        @Html.LabelFor(c => producto.compraRestringida, htmlAttributes: new { @class = "control-label col-xs-4" })
                        <div class="col-xs-8">
                            <div class="radio radio-inline">
                                <label class="radio-label">
                                    <input class="radio-input" @(producto.compraRestringida == 1 ? "checked" : "") type="radio" name="producto_compraRestringida" id="producto_compraRestringida_si" value="1"><span>SI</span>
                                </label>
                            </div>
                            <div class="radio radio-inline">
                                <label class="radio-label">
                                    <input class="radio-input" @(producto.compraRestringida != 1 ? "checked" : "") type="radio" name="producto_compraRestringida" id="producto_compraRestringida_no" value="0"><span>NO</span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>


        <div class="row">


            <div class="pull-right">
                <button type="button" id="btnCancelarProducto" class="btn btn-danger">Cancelar</button>
                <button id="btnFinalizarEdicionProducto" type="button" class="btn btn-success">Finalizar Creación</button>
            </div>
        </div>

    </form>
</div>



@section Scripts {
    @Scripts.RenderFormat("<script type=\"text/javascript\" src=\"{0}?nocache=" + TempData["ScriptVersion"] + "\"></script>", "~/bundles/producto")
}